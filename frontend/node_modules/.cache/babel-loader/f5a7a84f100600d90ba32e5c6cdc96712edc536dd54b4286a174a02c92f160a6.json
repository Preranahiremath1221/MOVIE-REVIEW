{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prera\\\\Downloads\\\\MOVIE REVIEW\\\\frontend\\\\src\\\\components\\\\MovieDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport ReviewForm from './ReviewForm';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { dummyShowsData, dummyTrailers, dummyReviews } from '../assets';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedTrailer, setSelectedTrailer] = useState(null);\n  const getYouTubeVideoId = url => {\n    // eslint-disable-next-line no-useless-escape\n    const match = url.match(/(?:https?:\\/\\/)?(?:www\\.)?(?:youtube.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu.be\\/)([^\"&?\\/\\s]{11})/);\n    return match ? match[1] : null;\n  };\n\n  // Removed unused isYouTubeUrl function to fix eslint warning\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const movieRes = await axios.get(`/api/movies/${id}`);\n        let movieData = movieRes.data;\n        setMovie(movieData);\n\n        // Set the first trailer as selected by default\n        if (movieData.trailers && movieData.trailers.length > 0) {\n          const firstTrailer = movieData.trailers[0];\n          const firstTrailerUrl = typeof firstTrailer === 'string' ? firstTrailer : firstTrailer.videoUrl;\n          setSelectedTrailer(firstTrailerUrl);\n        }\n        const reviewsRes = await axios.get(`/api/reviews/movie/${id}`);\n        setReviews(reviewsRes.data);\n        if (reviewsRes.data.length === 0) {\n          setReviews(dummyReviews);\n        }\n      } catch (err) {\n        setError('Failed to load movie details');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Error, {\n    message: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: movie && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-poster\",\n          children: movie.posterUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.posterUrl,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-image\",\n            children: \"No Image Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: movie.title || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), movie.tagline && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tagline\",\n            children: [\"\\\"\", movie.tagline, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Release Year: \", movie.releaseYear || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Runtime: \", movie.runtime ? `${movie.runtime} min` : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Rating: \", movie.averageRating ? `${movie.averageRating}/10` : 'N/A', \" (\", movie.voteCount ? movie.voteCount.toLocaleString() : '0', \" votes)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genres\",\n            children: movie.genre && movie.genre.length > 0 ? movie.genre.map((genre, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"genre-tag\",\n              children: genre\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"genre-tag\",\n              children: \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"overview\",\n            children: movie.synopsis || movie.overview || 'No description available.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"cast-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-grid\",\n          children: movie.casts && movie.casts.length > 0 ? movie.casts.slice(0, 10).map((actor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cast-card\",\n            children: [actor.profile_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: actor.profile_path,\n              alt: actor.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cast-image-placeholder\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uD83C\\uDFAD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: actor.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No cast information available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"trailers-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Trailers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trailers-grid\",\n          children: movie.trailers && movie.trailers.length > 0 ? movie.trailers.map((trailer, index) => {\n            // Handle both string URLs and object format\n            const trailerUrl = typeof trailer === 'string' ? trailer : trailer.videoUrl;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trailer-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"trailer-placeholder\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\uD83C\\uDFAC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Trailer \", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 23\n              }, this), trailerUrl ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectedTrailer(trailerUrl),\n                className: \"btn-primary\",\n                children: \"Watch Trailer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-secondary\",\n                disabled: true,\n                children: \"Trailer Unavailable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No trailers available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), selectedTrailer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trailer-player\",\n          children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"560\",\n            height: \"315\",\n            src: `https://www.youtube.com/embed/${getYouTubeVideoId(selectedTrailer)}`,\n            title: \"YouTube video player\",\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedTrailer(null),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"reviews-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReviewForm, {\n          movieId: movie._id,\n          onReviewAdded: newReview => setReviews([newReview, ...reviews])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reviews-list\",\n          children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"review-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"review-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"review-user\",\n                children: review.user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"review-rating\",\n                children: ['★'.repeat(review.rating), '☆'.repeat(5 - review.rating)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"review-date\",\n                children: new Date(review.createdAt).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"review-comment\",\n              children: review.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)]\n          }, review._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"fJj9eI+UuSyBStYsW6BtEsJNNhE=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","ReviewForm","Loading","Error","dummyShowsData","dummyTrailers","dummyReviews","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetails","_s","id","movie","setMovie","reviews","setReviews","loading","setLoading","error","setError","selectedTrailer","setSelectedTrailer","getYouTubeVideoId","url","match","fetchMovie","movieRes","get","movieData","data","trailers","length","firstTrailer","firstTrailerUrl","videoUrl","reviewsRes","err","fileName","_jsxFileName","lineNumber","columnNumber","message","className","children","posterUrl","src","alt","title","tagline","releaseYear","runtime","averageRating","voteCount","toLocaleString","genre","map","index","synopsis","overview","casts","slice","actor","profile_path","name","trailer","trailerUrl","onClick","disabled","width","height","frameBorder","allow","allowFullScreen","movieId","_id","onReviewAdded","newReview","review","user","repeat","rating","Date","createdAt","toLocaleDateString","comment","_c","$RefreshReg$"],"sources":["C:/Users/prera/Downloads/MOVIE REVIEW/frontend/src/components/MovieDetails.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ReviewForm from './ReviewForm';\r\nimport Loading from './Loading';\r\nimport Error from './Error';\r\nimport { dummyShowsData, dummyTrailers, dummyReviews } from '../assets';\r\n\r\nfunction MovieDetails() {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedTrailer, setSelectedTrailer] = useState(null);\r\n\r\n  const getYouTubeVideoId = (url) => {\r\n    // eslint-disable-next-line no-useless-escape\r\n    const match = url.match(/(?:https?:\\/\\/)?(?:www\\.)?(?:youtube.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu.be\\/)([^\"&?\\/\\s]{11})/);\r\n    return match ? match[1] : null;\r\n  };\r\n\r\n  // Removed unused isYouTubeUrl function to fix eslint warning\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      try {\r\n        const movieRes = await axios.get(`/api/movies/${id}`);\r\n        let movieData = movieRes.data;\r\n\r\n\r\n\r\n        setMovie(movieData);\r\n\r\n        // Set the first trailer as selected by default\r\n        if (movieData.trailers && movieData.trailers.length > 0) {\r\n          const firstTrailer = movieData.trailers[0];\r\n          const firstTrailerUrl = typeof firstTrailer === 'string' ? firstTrailer : firstTrailer.videoUrl;\r\n          setSelectedTrailer(firstTrailerUrl);\r\n        }\r\n\r\n        const reviewsRes = await axios.get(`/api/reviews/movie/${id}`);\r\n        setReviews(reviewsRes.data);\r\n        if (reviewsRes.data.length === 0) {\r\n          setReviews(dummyReviews);\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to load movie details');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovie();\r\n  }, [id]);\r\n\r\n  if (loading) return <Loading />;\r\n  if (error) return <Error message={error} />;\r\n\r\n  return (\r\n    <div className=\"movie-details\">\r\n      {movie && (\r\n        <>\r\n          {/* Movie Header */}\r\n          <div className=\"movie-header\">\r\n            <div className=\"movie-poster\">\r\n              {movie.posterUrl ? (\r\n                <img src={movie.posterUrl} alt={movie.title} />\r\n              ) : (\r\n                <div className=\"no-image\">No Image Available</div>\r\n              )}\r\n            </div>\r\n            <div className=\"movie-info\">\r\n              <h1>{movie.title || 'N/A'}</h1>\r\n              {movie.tagline && <p className=\"tagline\">\"{movie.tagline}\"</p>}\r\n              <div className=\"movie-meta\">\r\n                <span>Release Year: {movie.releaseYear || 'N/A'}</span>\r\n                <span>Runtime: {movie.runtime ? `${movie.runtime} min` : 'N/A'}</span>\r\n                <span>Rating: {movie.averageRating ? `${movie.averageRating}/10` : 'N/A'} ({movie.voteCount ? movie.voteCount.toLocaleString() : '0'} votes)</span>\r\n              </div>\r\n              <div className=\"genres\">\r\n                {movie.genre && movie.genre.length > 0 ? (\r\n                  movie.genre.map((genre, index) => (\r\n                    <span key={index} className=\"genre-tag\">{genre}</span>\r\n                  ))\r\n                ) : (\r\n                  <span className=\"genre-tag\">N/A</span>\r\n                )}\r\n              </div>\r\n              <p className=\"overview\">{movie.synopsis || movie.overview || 'No description available.'}</p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Cast Section */}\r\n          <section className=\"cast-section\">\r\n            <h2>Cast</h2>\r\n            <div className=\"cast-grid\">\r\n              {movie.casts && movie.casts.length > 0 ? (\r\n                movie.casts.slice(0, 10).map((actor, index) => (\r\n                  <div key={index} className=\"cast-card\">\r\n                    {actor.profile_path ? (\r\n                      <img src={actor.profile_path} alt={actor.name} />\r\n                    ) : (\r\n                      <div className=\"cast-image-placeholder\">\r\n                        <span>🎭</span>\r\n                      </div>\r\n                    )}\r\n                    <p>{actor.name}</p>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p>No cast information available.</p>\r\n              )}\r\n            </div>\r\n          </section>\r\n\r\n          {/* Trailers Section */}\r\n          <section className=\"trailers-section\">\r\n            <h2>Trailers</h2>\r\n            <div className=\"trailers-grid\">\r\n              {movie.trailers && movie.trailers.length > 0 ? (\r\n                movie.trailers.map((trailer, index) => {\r\n                  // Handle both string URLs and object format\r\n                  const trailerUrl = typeof trailer === 'string' ? trailer : trailer.videoUrl;\r\n\r\n                  return (\r\n                    <div key={index} className=\"trailer-card\">\r\n                      <div className=\"trailer-placeholder\">\r\n                        <span>🎬</span>\r\n                        <p>Trailer {index + 1}</p>\r\n                      </div>\r\n                      {trailerUrl ? (\r\n                        <button onClick={() => setSelectedTrailer(trailerUrl)} className=\"btn-primary\">\r\n                          Watch Trailer\r\n                        </button>\r\n                      ) : (\r\n                        <button className=\"btn-secondary\" disabled>\r\n                          Trailer Unavailable\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : (\r\n                <p>No trailers available.</p>\r\n              )}\r\n            </div>\r\n            {selectedTrailer && (\r\n              <div className=\"trailer-player\">\r\n                <iframe\r\n                  width=\"560\"\r\n                  height=\"315\"\r\n                  src={`https://www.youtube.com/embed/${getYouTubeVideoId(selectedTrailer)}`}\r\n                  title=\"YouTube video player\"\r\n                  frameBorder=\"0\"\r\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                  allowFullScreen\r\n                ></iframe>\r\n                <button onClick={() => setSelectedTrailer(null)}>Close</button>\r\n              </div>\r\n            )}\r\n          </section>\r\n\r\n          {/* Reviews Section */}\r\n          <section className=\"reviews-section\">\r\n            <h2>Reviews</h2>\r\n            <ReviewForm movieId={movie._id} onReviewAdded={(newReview) => setReviews([newReview, ...reviews])} />\r\n            <div className=\"reviews-list\">\r\n              {reviews.map(review => (\r\n                <div key={review._id} className=\"review-card\">\r\n                  <div className=\"review-header\">\r\n                    <span className=\"review-user\">{review.user.name}</span>\r\n                    <span className=\"review-rating\">{'★'.repeat(review.rating)}{'☆'.repeat(5 - review.rating)}</span>\r\n                    <span className=\"review-date\">{new Date(review.createdAt).toLocaleDateString()}</span>\r\n                  </div>\r\n                  <p className=\"review-comment\">{review.comment}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </section>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}