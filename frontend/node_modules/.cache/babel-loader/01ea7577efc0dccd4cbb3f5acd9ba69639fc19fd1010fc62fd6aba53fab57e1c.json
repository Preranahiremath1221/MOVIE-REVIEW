{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{dummyShowsData}from'../assets';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MovieList(){const[searchTerm,setSearchTerm]=useState('');const[genreFilter,setGenreFilter]=useState('');const[yearFilter,setYearFilter]=useState('');const[ratingFilter,setRatingFilter]=useState('');const[filteredMovies,setFilteredMovies]=useState(dummyShowsData);// Extract unique genres and years for filter dropdowns\nconst genres=Array.from(new Set(dummyShowsData.flatMap(movie=>movie.genres.map(g=>g.name))));const years=Array.from(new Set(dummyShowsData.map(movie=>new Date(movie.release_date).getFullYear()))).sort((a,b)=>b-a);useEffect(()=>{let filtered=dummyShowsData;if(searchTerm){filtered=filtered.filter(movie=>movie.title.toLowerCase().includes(searchTerm.toLowerCase()));}if(genreFilter){filtered=filtered.filter(movie=>movie.genres.some(g=>g.name===genreFilter));}if(yearFilter){filtered=filtered.filter(movie=>new Date(movie.release_date).getFullYear().toString()===yearFilter);}if(ratingFilter){filtered=filtered.filter(movie=>Math.floor(movie.vote_average)>=parseInt(ratingFilter));}setFilteredMovies(filtered);},[searchTerm,genreFilter,yearFilter,ratingFilter]);return/*#__PURE__*/_jsxs(\"div\",{className:\"movie-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Movie Listing\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filters\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search by title...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)}),/*#__PURE__*/_jsxs(\"select\",{value:genreFilter,onChange:e=>setGenreFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Genres\"}),genres.map(genre=>/*#__PURE__*/_jsx(\"option\",{value:genre,children:genre},genre))]}),/*#__PURE__*/_jsxs(\"select\",{value:yearFilter,onChange:e=>setYearFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Years\"}),years.map(year=>/*#__PURE__*/_jsx(\"option\",{value:year.toString(),children:year},year))]}),/*#__PURE__*/_jsxs(\"select\",{value:ratingFilter,onChange:e=>setRatingFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Ratings\"}),[9,8,7,6,5,4,3,2,1].map(r=>/*#__PURE__*/_jsxs(\"option\",{value:r,children:[r,\"+\"]},r))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"movies-grid\",children:filteredMovies.length>0?filteredMovies.map(movie=>/*#__PURE__*/_jsxs(\"div\",{className:\"movie-card\",children:[/*#__PURE__*/_jsx(\"img\",{src:movie.poster_path,alt:movie.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"movie-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:movie.title}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Rating: \",movie.vote_average,\"/10\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Year: \",new Date(movie.release_date).getFullYear()]}),/*#__PURE__*/_jsx(Link,{to:\"/movies/\".concat(movie.id),className:\"btn-small\",children:\"View Details\"})]})]},movie.id)):/*#__PURE__*/_jsx(\"p\",{children:\"No movies found matching your criteria.\"})})]});}export default MovieList;","map":{"version":3,"names":["React","useState","useEffect","Link","dummyShowsData","jsx","_jsx","jsxs","_jsxs","MovieList","searchTerm","setSearchTerm","genreFilter","setGenreFilter","yearFilter","setYearFilter","ratingFilter","setRatingFilter","filteredMovies","setFilteredMovies","genres","Array","from","Set","flatMap","movie","map","g","name","years","Date","release_date","getFullYear","sort","a","b","filtered","filter","title","toLowerCase","includes","some","toString","Math","floor","vote_average","parseInt","className","children","type","placeholder","value","onChange","e","target","genre","year","r","length","src","poster_path","alt","to","concat","id"],"sources":["C:/Users/prera/Downloads/MOVIE REVIEW/frontend/src/components/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { dummyShowsData } from '../assets';\r\n\r\nfunction MovieList() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [genreFilter, setGenreFilter] = useState('');\r\n  const [yearFilter, setYearFilter] = useState('');\r\n  const [ratingFilter, setRatingFilter] = useState('');\r\n  const [filteredMovies, setFilteredMovies] = useState(dummyShowsData);\r\n\r\n  // Extract unique genres and years for filter dropdowns\r\n  const genres = Array.from(\r\n    new Set(dummyShowsData.flatMap(movie => movie.genres.map(g => g.name)))\r\n  );\r\n  const years = Array.from(\r\n    new Set(dummyShowsData.map(movie => new Date(movie.release_date).getFullYear()))\r\n  ).sort((a, b) => b - a);\r\n\r\n  useEffect(() => {\r\n    let filtered = dummyShowsData;\r\n\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(movie =>\r\n        movie.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n    if (genreFilter) {\r\n      filtered = filtered.filter(movie =>\r\n        movie.genres.some(g => g.name === genreFilter)\r\n      );\r\n    }\r\n    if (yearFilter) {\r\n      filtered = filtered.filter(\r\n        movie => new Date(movie.release_date).getFullYear().toString() === yearFilter\r\n      );\r\n    }\r\n    if (ratingFilter) {\r\n      filtered = filtered.filter(\r\n        movie => Math.floor(movie.vote_average) >= parseInt(ratingFilter)\r\n      );\r\n    }\r\n    setFilteredMovies(filtered);\r\n  }, [searchTerm, genreFilter, yearFilter, ratingFilter]);\r\n\r\n  return (\r\n    <div className=\"movie-list\">\r\n      <h2>Movie Listing</h2>\r\n\r\n      <div className=\"filters\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by title...\"\r\n          value={searchTerm}\r\n          onChange={e => setSearchTerm(e.target.value)}\r\n        />\r\n        <select value={genreFilter} onChange={e => setGenreFilter(e.target.value)}>\r\n          <option value=\"\">All Genres</option>\r\n          {genres.map(genre => (\r\n            <option key={genre} value={genre}>{genre}</option>\r\n          ))}\r\n        </select>\r\n        <select value={yearFilter} onChange={e => setYearFilter(e.target.value)}>\r\n          <option value=\"\">All Years</option>\r\n          {years.map(year => (\r\n            <option key={year} value={year.toString()}>{year}</option>\r\n          ))}\r\n        </select>\r\n        <select value={ratingFilter} onChange={e => setRatingFilter(e.target.value)}>\r\n          <option value=\"\">All Ratings</option>\r\n          {[9,8,7,6,5,4,3,2,1].map(r => (\r\n            <option key={r} value={r}>{r}+</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"movies-grid\">\r\n        {filteredMovies.length > 0 ? (\r\n          filteredMovies.map(movie => (\r\n            <div key={movie.id} className=\"movie-card\">\r\n              <img src={movie.poster_path} alt={movie.title} />\r\n              <div className=\"movie-info\">\r\n                <h3>{movie.title}</h3>\r\n                <p>Rating: {movie.vote_average}/10</p>\r\n                <p>Year: {new Date(movie.release_date).getFullYear()}</p>\r\n                <Link to={`/movies/${movie.id}`} className=\"btn-small\">View Details</Link>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No movies found matching your criteria.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}